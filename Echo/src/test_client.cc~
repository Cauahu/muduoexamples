#include <muduo/net/EventLoop.h>
#include <muduo/net/TcpClient.h>
#include <muduo/net/InetAddress.h>
#include <muduo/net/TcpConnection.h>
#include <muduo/base/Thread.h>
#include <stdio.h>

using namespace muduo;
using namespace std;

typedef boost::shared_ptr<TcpConnection> TcpConnectionPtr;

void connectCallback(int sockfd){
    printf("%d is connected\n", sockfd);
}

void WriteCallback(const Tcp)

void onMessage(const TcpConnectionPtr& conn, muduo::net::Buffer* buf, muduo::Timestamp time)
{
	muduo::string msg(buf->retrieveAllAsString());
	LOG_INFO << msg;
}

int main(int argc, const char *argv[])
{
    printf("main(): pid: %d, tid: %d\n", 
            getpid(), muduo::CurrentThread::tid());
	InetAddress serverAddr("127.0.0.1", 2007);
	EventLoop loop;
	TcpClient myclient(loop, serverAddr, "huzhuang's client" );
	myclient.setMessageCallback(onMessage);
	myclient.setConnectionCallback(connectCallback);

	myclient.connect();

	loop.loop();

	sleep(3);

	myclient.disconnect();

	loop.quit();

	return 0;
}
